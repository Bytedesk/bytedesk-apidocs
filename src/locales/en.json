{
  "common.search": "Search",
  "common.home": "Home",
  "common.loading": "Loading...",
  "common.navigation": "Navigation",
  "common.codeExamples": "Code Examples",
  "common.onThisPage": "On this page",
  "common.close": "Close",
  "common.darkMode": "Dark mode",
  "common.lightMode": "Light mode",
  "common.viewOnGitHub": "View on GitHub",
  "common.quickNavigation": "Quick Navigation",
  "common.overview": "Overview",
  "common.quickStart": "Quick Start",
  "common.authentication": "Authentication",
  "common.baseUrl": "Base URL",
  "common.apiModules": "API Modules",
  "common.responseFormat": "Response Format",
  "common.errorHandling": "Error Handling",
  "common.tryIt": "Try it",
  
  "nav.authentication": "Authentication",
  "nav.messages": "Messages",
  "nav.threads": "Threads",
  "nav.tickets": "Tickets",
  "nav.users": "Users",
  
  "api.request": "Request",
  "api.response": "Response",
  "api.parameters": "Parameters",
  "api.example": "Example",
  "api.required": "Required",
  "api.optional": "Optional",
  "api.requestBody": "Request Body",
  "api.requestHeaders": "Request Headers",
  "api.responseExample": "Response Example",
  "api.successResponse": "Success Response",
  "api.errorResponse": "Error Response",
  "api.parameterDescription": "Parameter Description",
  "api.fieldDescription": "Field Description",
  "api.interfaceDescription": "Interface Description",
  "api.usageScenarios": "Usage Scenarios",
  "api.notes": "Notes",
  "api.securityRecommendations": "Security Recommendations",
  "api.loginMethods": "Login Methods",
  
  "methods.get": "Get",
  "methods.post": "Create",
  "methods.put": "Update",
  "methods.delete": "Delete",
  
  "auth.userLogin": "User Login",
  "auth.userRegister": "User Registration",
  "auth.loginDescription": "Login with username and password, returns access token and user information",
  "auth.registerDescription": "Create a new user account",
  "auth.bearerTokenAuth": "Bearer Token Authentication",
  "auth.accessTokenLogin": "AccessToken Login",
  "auth.bearerTokenDescription": "REST API requests require Bearer Token in request headers",
  "auth.accessTokenDescription": "Some interfaces support AccessToken login for web redirect scenarios",
  "auth.username": "Username",
  "auth.password": "Password",
  "auth.mobile": "Mobile Number",
  "auth.email": "Email Address",
  "auth.code": "Verification Code",
  "auth.accessToken": "Access Token",
  "auth.loginMethodUsername": "Username Password",
  "auth.loginMethodMobile": "Mobile Password",
  "auth.loginMethodEmail": "Email Password",
  "auth.loginMethodCode": "Verification Code Login",
  "auth.loginMethodUsernameDesc": "Most common login method",
  "auth.loginMethodMobileDesc": "Use mobile number as login credential",
  "auth.loginMethodEmailDesc": "Use email as login credential",
  "auth.loginMethodCodeDesc": "Password-free login for specific scenarios",
  
  "user.profile": "User Profile",
  "user.list": "User List",
  "user.create": "Create User",
  "user.profileDescription": "Get detailed personal information of the currently logged-in user, including basic profile and settings, requires authentication",
  "user.id": "User unique identifier",
  "user.username": "Username",
  "user.nickname": "Display nickname",
  "user.email": "Email address",
  "user.mobile": "Mobile number",
  "user.avatar": "Avatar image URL",
  "user.status": "User status",
  "user.createdAt": "Account creation time",
  "user.statusActive": "Active",
  "user.statusInactive": "Inactive",
  "user.statusBanned": "Banned",
  
  "message.send": "Send Message",
  "message.sendDescription": "Send text, images, files and other types of messages",
  
  "thread.list": "Thread List",
  "thread.create": "Create Thread",
  "thread.listDescription": "Get all user threads",
  "thread.createDescription": "Create and manage chat threads",
  
  "ticket.create": "Create Ticket",
  "ticket.query": "Query Tickets",
  "ticket.createDescription": "Create customer service tickets",
  "ticket.queryDescription": "Query organization tickets",
  
  "home.title": "Bytedesk API Documentation",
  "home.description": "Complete API reference for integrating with Bytedesk services",
  "home.welcome": "Welcome to the ByteDesk API documentation. This documentation will help you get started with our powerful API for building customer service and communication solutions.",
  "home.apiOverview": "The Bytedesk API provides a comprehensive set of endpoints for managing customer support, messaging, and communication workflows. Our RESTful API is designed to be developer-friendly with consistent response formats and detailed error messages.",
  "home.modules.authTitle": "Authentication Module",
  "home.modules.authDesc": "User login, registration, token refresh and other authentication functions",
  "home.modules.userTitle": "User Management",
  "home.modules.userDesc": "User information query, creation and management functions",
  "home.modules.threadTitle": "Thread Management",
  "home.modules.threadDesc": "Create and manage chat threads",
  "home.modules.messageTitle": "Message Functions",
  "home.modules.messageDesc": "Send text, images, files and other types of messages",
  "home.modules.ticketTitle": "Ticket System",
  "home.modules.ticketDesc": "Create and query customer service tickets",
  
  "error.unauthorized": "Unauthorized",
  "error.badRequest": "Bad Request - Invalid parameters",
  "error.invalidCredentials": "Invalid username or password",
  
  "usage.personalCenter": "User personal center display",
  "usage.getUserInfo": "Get user basic information",
  "usage.verifyUserStatus": "Verify user identity status",
  "usage.profilePage": "Personal profile page rendering",
  
  "security.useHttps": "Use HTTPS to transmit sensitive information",
  "security.loginLimit": "Implement login failure count limits",
  "security.strongPassword": "Recommend using strong password policies",
  "security.refreshToken": "Regularly refresh access tokens",
  
  "notes.saveToken": "Access tokens need to be properly saved",
  "notes.tokenExpiry": "Need to re-login or refresh when token expires",
  "notes.multipleCredentials": "Support multiple login credential types",
  "notes.requireBearerToken": "Requires valid Bearer Token",
  "notes.currentUserOnly": "Can only get information of currently logged-in user",
  "notes.sensitiveInfoFiltered": "Sensitive information may be filtered"
}